index.file = file.open("websocket-html/index.html","rb"); 
index.html = index.file.readall().close();
copco.file = file.open("websocket-html/copco display.png","rb"); 
copco.data = copco.file.readallbytes().close();
fav.file = file.open("websocket-html/logo_draft.ico","rb"); 
fav.data = fav.file.readallbytes().close();


SERVER_PORT=sys.get_env("SERVER_PORT");
SERVER_HOST=sys.get_env("SERVER_HOST");
index.html = index.html.replace("%SERVER_HOST%",SERVER_HOST);
index.html = index.html.replace("%SERVER_PORT%",SERVER_PORT);

println("server: "+SERVER_HOST+":"+SERVER_PORT);

rooms=[];

lobby_name="lobby";
println("creating room: "+lobby_name);
rooms[lobby_name].users_num = 0;
rooms[lobby_name].name = "lobby";
rooms[lobby_name].topic = "";
rooms[lobby_name].created = sys.time();
rooms[lobby_name].password="";
rooms[lobby_name].bg_url="";
rooms[lobby_name].users = [];


http_call={
	/*println("serving request:",arguments["protocol"]);*/
	url = arguments["url"];
	println("serving url:["+url+"]");
	/*println("url_stop:",(url=="/stop"));
	println("@url_stop:",((@url)=="/stop"));
	println("index:",@index.html);*/
	msg=@index.html;
	type="text/html";
	(url=="/status").do({@msg = "actual chat server status";@daemon.broadcast("echo","someone is watching the status");});
	(url=="/stop").do({@msg = "stopping server";@running=0;});
	(url=="/copco").do({@msg = @copco.data;@type="image/png";});
	(url=="/favicon.ico").do({println("sending icon");@msg = @fav.data;@type="image/ico";});

	/*TODO sending fav 2 times crashes*/

	room="lobby";
	cookie_room="room=lobby";
	cookie_name="";
	(url.index_of("/room/")!=-1).do(
	{
		room = url.sub(url.index_of("/room/")+"/room/".len());
		end = room.index_of("/");
		(end!=-1).do({room = room.sub(0,end);});
		@rooms.each({println("rooms:"+arguments[0]._name_())});
	  	(!(room.in_keys(@rooms))).do({
	  		println("creating room in http:"+room);
	  		@rooms[room].created = sys.time;
	  		@rooms[room].users_num=0;
	  		@rooms[room].users=[];
	  		@rooms[room].password="";
	  		@rooms[room].bg_url="";
	  	});
	  	cookie_room = "room="+room;
	});

	(url.index_of("/name/")!=-1).do(
	{
		name = url.sub(url.index_of("/name/")+"/name/".len());
		end = name.index_of("/");
		(end!=-1).do({name = name.sub(0,end);});
	  	cookie_name = "name="+name;
	});

	(url.index_of("/admin/")!=-1).do(
	{
		chat = url.sub(url.index_of("/admin/")+"/admin/".len());
		end = chat.index_of("/");
		(end!=-1).do({chat = chat.sub(0,end);});
	  	msg = "sending message: "+chat+" to "+room;
		/*@daemon.broadcast("echo","("+room+")admin: "+chat);*/
		println(@rooms[room]);
		@rooms[room].users.each(
		{
			sendid=arguments[0];
			println("sending message:"+chat+" to:"+sendid);
			@daemon.send("echo",chat,sendid);
			println("sent message:"+chat+" to:"+sendid);
		});

	});


	header = "HTTP/1.0 200 OK\r\n" +
        "Server: nyx_chat_example\r\n" +
        "Content-Type: "+type+"\r\n" + 
        "Content-Length: " + len(msg) + "\r\n";
    (cookie_room!="").do({header = header+"Set-Cookie: "+cookie_room+";path=/; Max-Age=360000\r\n";});
    (cookie_name!="").do({header = header+"Set-Cookie: "+cookie_name+";path=/; Max-Age=360000\r\n";});
    header = header + "\r\n";
	ret = header + msg;
};

echo_call=
{
	room="";
	skip=0;
	println("serving request:["+arguments["message"]+"] : "+arguments["protocol"]+" : "+arguments["session"].id+" cookies: "+arguments["session"].cookie);
	cookies=http.parse_cookies(arguments["session"].cookie);

	(arguments["session"].has("uname")==0).do({arguments["session"].uname = arguments["session"].id.str()});
	(arguments["session"].has("room_name")==0).do({
		arguments["session"].room_name = "lobby";
		@rooms["lobby"].users_num = @rooms["lobby"].users_num + 1;
		@rooms["lobby"].users.append_item(arguments["session"].id);
		println("users lobby len:"+@rooms["lobby"].users.len());
		println("users:",@rooms["lobby"].users);
		(@rooms["lobby"].topic!="").do({@daemon.send(arguments["protocol"],"lobby topic: "+@rooms["lobby"].topic,arguments["session"].id);});
		(@rooms["lobby"].bg_url!="").do({@daemon.send(arguments["protocol"],"/bg_url "+@rooms["lobby"].bg_url,arguments["session"].id);});
	});

	arguments["session"].pw_prompt.do({
		(arguments["message"]==@rooms[arguments["session"].room_name].password).do({
			@daemon.send(arguments["protocol"],"Password correct. ",arguments["session"].id);
			arguments["session"].pw_prompt=0;
			(@rooms[arguments["session"].room_name].topic!="").do({@daemon.send(arguments["protocol"],"room topic: "+@rooms[arguments["session"].room_name].topic,arguments["session"].id);});
			(@rooms[arguments["session"].room_name].bg_url!="").do({@daemon.send(arguments["protocol"],"/bg_url "+@rooms[arguments["session"].room_name].bg_url,arguments["session"].id);});
		});
		(arguments["message"]==@rooms[arguments["session"].room_name].password).else({@daemon.send(arguments["protocol"],"Wrong Password! Try again. ",arguments["session"].id);});
		skip=1;
	});


	(arguments["message"].index_of("/room")==0).do(
	{
		room = arguments["message"].sub("/room ".len());
		(room=="").do({room="lobby"});
		(arguments["session"].has("room_name")).do({
			println("removing user from:"+arguments["session"].room_name);
			@rooms[arguments["session"].room_name].users_num = @rooms[arguments["session"].room_name].users_num - 1;
			@rooms[arguments["session"].room_name].users.remove(arguments["session"].id);
		});
		(!(room.in_keys(@rooms))).do({
			println("creating room:"+room);
			@rooms[room].users_num = 0;
			@rooms[room].created = sys.time;
	  		@rooms[room].password="";
	  		@rooms[room].topic="";
	  		@rooms[room].bg_url="";
			@rooms[room].users = [];
		});
		(room.in_keys(@rooms)).do({
			println("room_users:"+@rooms[room].users_num);
			@rooms[room].users_num = @rooms[room].users_num + 1;
			println("room_users len:"+@rooms[room].users.len());
			@rooms[room].users.append_item(arguments["session"].id);

			(@rooms[room].password!="").do({
				@daemon.send(arguments["protocol"],"Enter room password: ",arguments["session"].id);
				arguments["session"].pw_prompt=1;
				});
			(@rooms[room].password=="").do({
			(@rooms[room].topic!="").do({@daemon.send(arguments["protocol"],"room topic: "+@rooms[room].topic,arguments["session"].id);});
			(@rooms[room].bg_url!="").do({@daemon.send(arguments["protocol"],"/bg_url "+@rooms[room].bg_url,arguments["session"].id);});
			});
		});
		arguments["session"].room_name:=room;
		
		skip=1;
	});
	(arguments["message"].index_of("/name")==0).do(
	{
		chat_name = arguments["message"].sub("/name ".len());
		arguments["session"].uname = chat_name;/*if a simple assign is used here it would resetted with each new echo_call run*/
		@daemon.send(arguments["protocol"],"name set to: "+chat_name,arguments["session"].id);
		skip=1;
	});

	(arguments["message"].index_of("/pw")==0).do(
	{
		pw = arguments["message"].sub("/pw ".len());
 		@rooms[arguments["session"].room_name].password:= pw;
		@daemon.send(arguments["protocol"],"password set to: "+pw,arguments["session"].id);
		skip=1;
	});

	(arguments["message"].index_of("/treasure")==0).do(
	{
		@daemon.send(arguments["protocol"],"your last treasure: "+arguments["session"].treasure,arguments["session"].id);
		skip=1;
	});


	(arguments["message"].index_of("/help")==0).do(
	{
		topic = arguments["message"].sub("/help ".len());
		@daemon.send(arguments["protocol"],"
			Commands List:
			==============
				/room [name] - join a room 
				/pw [password] - sets password to enter the room
				/name [name] - sets your username
				/topic [caption] - set the topic of the room
				/roll [treasure] - starts a raffle
				/last - see your last result
				/treasure - see your last treasure
				/bg_url [url] - sets the background of the room 
			",arguments["session"].id);
		skip=1;
	});

	(arguments["message"].index_of("/topic")==0).do(
	{
		topic = arguments["message"].sub("/topic ".len());
 		@rooms[arguments["session"].room_name].topic:= topic;
		@daemon.send(arguments["protocol"],"topic set to: "+topic,arguments["session"].id);
		skip=1;
	});

	(arguments["message"].index_of("/bg_url")==0).do(
	{
		bg_url = arguments["message"].sub("/bg_url ".len());
 		@rooms[arguments["session"].room_name].bg_url:=bg_url;
		@daemon.send(arguments["protocol"],"bg_url set to: "+bg_url,arguments["session"].id);
		/*@daemon.send(arguments["protocol"],"/bg_url "+bg_url,arguments["session"].id);*/
		/*skip=1;*/
	});


	(arguments["message"].index_of("/last")==0).do(
	{
		arguments["session"].has("dice").do({
		@daemon.send(arguments["protocol"],"your last roll was: "+arguments["session"].dice,arguments["session"].id);
		});
		skip=1;
	});

	(arguments["message"].index_of("/roll")==0).do(
	{
		treasure = arguments["message"].sub("/roll ".len());
		di=0;
		high=0;
		winner=-1;
		uname=arguments["session"].uname;
		prot=arguments["protocol"];
		println("user: "+uname+ " started a raffle.");
		@rooms[arguments["session"].room_name].users.each({sendid=arguments[0];@daemon.send(prot,uname+" started a raffle! ",sendid)});

		?({di<arguments["daemon.sessions"].len()},
		{
			session = arguments["daemon.sessions"][di];

			((session.id!=arguments["session"].id) && (session.protocol==arguments["protocol"]) && (session.room_name==arguments["session"].room_name)).do({
				session.dice := sys.random(100)+1;
				(session.dice>high).do({high:=session.dice;winner=session;});
				@daemon.send(arguments["protocol"],"you rolled: "+session.dice,session.id);
				myid=session.id;
				/*prot=arguments["protocol"];*/
				@rooms[arguments["session"].room_name].users.each({sendid=arguments[0];(sendid!=myid).do({@daemon.send(prot,session.uname+" rolled: "+session.dice,sendid)})});

			});
			di=di+1;
		},{},1);

		@daemon.send(arguments["protocol"],"you've won with:"+high,winner.id);
		@daemon.send(arguments["protocol"],"1.",winner.id);
		@daemon.send(arguments["protocol"],"2..",winner.id);
		@daemon.send(arguments["protocol"],"3...",winner.id);
		@daemon.send(arguments["protocol"],"Your Treasure: "+treasure,winner.id);
		arguments["session"].treasure="GIFTED: "+treasure;
		winner.treasure="RECEIVED: "+treasure;
		prot=arguments["protocol"];
		myid=arguments["session"].id;
		@rooms[arguments["session"].room_name].users.each({sendid=arguments[0];((sendid!=myid)&&(sendid!=winner.id)).do({@daemon.send(prot,"you've lost. Better luck next time!",sendid)})});
		skip=1;
	});


	(!skip).do(
	{
		println("sending message to room users:"+arguments["session"].room_name);
		message="["+sys.string_time("%R")+"]["+arguments["session"].room_name+"]["+arguments["session"].uname+"]: "+arguments["message"];
		prot=arguments["protocol"];
		myid=arguments["session"].id;
		sessions=arguments["daemon.sessions"];
		@rooms[arguments["session"].room_name].users.each(
		{
			sendid=arguments[0];
			/*(sendid!=myid).do({*/
			/*session_index=arguments["sessions"].item_index(sendid);*/
			ss=0;
			sessions.each({(arguments[0].id==sendid).do({ss=arguments[0]})});
			(ss.pw_prompt==0).do({
				println("sending message:"+message+" to:"+sendid);
				@daemon.send(prot,message,sendid);
				println("sent message:"+message+" to:"+sendid);
			});
		});
	});
	ret="";
};

connect_call={
	arguments["session"].room_name = "lobby";
	@rooms["lobby"].users_num = @rooms["lobby"].users_num + 1;
	@rooms["lobby"].users.append_item(arguments["session"].id);
	(@rooms["lobby"].topic!="").do({@daemon.send(arguments["protocol"],"lobby topic: "+@rooms["lobby"].topic,arguments["session"].id);});
	(@rooms["lobby"].bg_url!="").do({@daemon.send(arguments["protocol"],"/bg_url "+@rooms["lobby"].bg_url,arguments["session"].id);});

	myid=arguments["session"].id;
	message="["+sys.string_time("%R")+"]["+arguments["session"].room_name+"] a user has entered the lobby";
	prot=arguments["protocol"];
	@rooms["lobby"].users.each(
	{
		sendid=arguments[0];
		(sendid!=myid).do({
			println("sending welcome message:"+message+" to:"+sendid);
			@daemon.send(prot,message,sendid);
			println("sent welcome message:"+message+" to:"+sendid);
		});
	});
	(@rooms["lobby"].password!="").do({
		@daemon.send(arguments["protocol"],"Enter lobby password: ",arguments["session"].id);
		arguments["session"].pw_prompt=1;
		});

};

disconnect_call={
	println("client "+arguments["session"].id+" disconnected.")
	@rooms[arguments["session"].room_name].users_num = @rooms[arguments["session"].room_name].users_num - 1;
	@rooms[arguments["session"].room_name].users.remove(arguments["session"].id);
};

callbacks=["http-only":http_call,"echo":echo_call];
daemon=websockets.start(8080,callbacks);
daemon.connect_handler = connect_call;
daemon.disconnect_handler = disconnect_call;
timeout=10;
println("servicing");
running=1;
?({running},{daemon.service(timeout)},{println("stopping daemon");daemon.service(1000);daemon.stop()},1);


